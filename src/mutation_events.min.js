// Copyright (c) 2024, Mason Freed
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree.
!function(){if(window.mutationEventsPolyfillInstalled||(window.mutationEventsPolyfillInstalled=!0,"MutationEvent"in window&&!window.mutationEventsUsePolyfillAlways))return;let e=new Set(["DOMCharacterDataModified","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified",]),t="Polyfilled",n={attrChange:0,bubbles:!0,cancelable:!1,newValue:"",prevValue:"",relatedNode:null};function o(e,o,a,r){let i=Object.assign({},n);a&&(i=Object.assign(i,a));let l=new Event(e+t,i);l.attrChange=i.attrChange,l.newValue=i.newValue,l.prevValue=i.prevValue,l.relatedNode=i.relatedNode,r&&Object.defineProperty(l,"target",{writable:!1,value:r}),o.dispatchEvent(l)}function a(e,t){let n=document.createTreeWalker(e,NodeFilter.SHOW_ALL);do t(n.currentNode);while(n.nextNode())}let r=new Map,i=new Set;function l(e){let t=[];for(let n of(e.forEach(function(e){let n=e.target,r=e.type;"attributes"===r?(null===e.oldValue||null===n.getAttribute(e.attributeName))&&o("DOMSubtreeModified",n,{attributeName:e.attributeName}):"characterData"===r?(o("DOMCharacterDataModified",n,{prevValue:e.oldValue,newValue:n.textContent}),t.push(n)):"childList"===r&&(e.removedNodes.forEach(e=>{t.push(n),o("DOMNodeRemoved",e),o("DOMNodeRemoved",n,void 0,e),a(e,e=>o("DOMNodeRemovedFromDocument",e,{bubbles:!1})),o("DOMNodeRemovedFromDocument",n,{bubbles:!1},e)}),e.addedNodes.forEach(e=>{t.push(n),o("DOMNodeInserted",e),a(e,e=>o("DOMNodeInsertedIntoDocument",e,{bubbles:!1}))}))}),t))o("DOMSubtreeModified",n)}function u(e){let t=e.getRootNode();for(;t instanceof ShadowRoot;)t=t.host.getRootNode();return t instanceof Document?t.documentElement:t}let d={subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0,characterData:!0,characterDataOldValue:!0},s=Element.prototype.addEventListener;function c(n,o,a){return e.has(n)?{fullEventName:n+t,augmentedListener(e){Object.defineProperty(e,"type",{writable:!1,value:n}),o(e)}}:{fullEventName:n,augmentedListener:o}}Element.prototype.addEventListener=function(t,n,o){if(e.has(t)){!function e(t){if(i.has(t))return;i.add(t);let n=u(t);if(r.has(n)){r.get(n).count++;return}let o=new MutationObserver(l);r.set(n,{observer:o,count:1}),o.observe(n,d)}(this);let{augmentedListener:a,fullEventName:f}=c(...arguments);s.apply(this,[f,a,o]);return}s.apply(this,arguments)};let f=window.removeEventListener;Element.prototype.removeEventListener=function(t,n,o){if(e.has(t)){!function e(t){if(!i.has(t))return;i.delete(t);let n=u(t);if(r.has(n)&&0==--r.get(n).count){let o=r.get(n).observer;r.delete(n),o.disconnect()}}(this);let{augmentedListener:a,fullEventName:l}=c(...arguments);f.apply(this,[l,a,o]);return}f.apply(this,arguments)},window.MutationEvent=class extends CustomEvent{constructor(e,t){if("MagicString"!==e)throw"Illegal constructor";super("",t)}initMutationEvent(...e){this.initCustomEvent(...e)}static MODIFICATION=1;static ADDITION=2;static REMOVAL=3},window.initMutationEvent=()=>new MutationEvent;let v=Document.prototype.createEvent;Document.prototype.createEvent=function(e,...t){return"MutationEvent"===e?new MutationEvent("MagicString"):v.call(this,e,...t)},console.log(`Mutation Events polyfill installed (native feature: ${"MutationEvent"in window?"supported":"not present"}).`)}();
