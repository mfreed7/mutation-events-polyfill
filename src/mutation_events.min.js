// Copyright (c) 2024, Mason Freed
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree.
!function(){if(window.mutationEventsPolyfillInstalled)return;window.mutationEventsPolyfillInstalled=!0;let e="MutationEvent"in window;if(e&&!window.mutationEventsUsePolyfillAlways)return;let t=new Set(["DOMCharacterDataModified","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified",]),n="Polyfilled",o={attrChange:0,bubbles:!0,cancelable:!1,newValue:"",prevValue:"",relatedNode:null};function a(e,t,a,r){let l=Object.assign({},o);a&&(l=Object.assign(l,a));let i=new Event(e+n,l);i.attrChange=l.attrChange,i.newValue=l.newValue,i.prevValue=l.prevValue,i.relatedNode=l.relatedNode,r&&Object.defineProperty(i,"target",{writable:!1,value:r}),t.dispatchEvent(i)}function r(e,t){let n=document.createTreeWalker(e,NodeFilter.SHOW_ALL);do t(n.currentNode);while(n.nextNode())}let l=new Map,i=new Set;function u(e){let t=[];for(let n of(e.forEach(function(e){let n=e.target,o=e.type;"attributes"===o?(null===e.oldValue||null===n.getAttribute(e.attributeName))&&a("DOMSubtreeModified",n,{attributeName:e.attributeName}):"characterData"===o?(a("DOMCharacterDataModified",n,{prevValue:e.oldValue,newValue:n.textContent}),t.push(n)):"childList"===o&&(e.removedNodes.forEach(e=>{t.push(n),a("DOMNodeRemoved",e),a("DOMNodeRemoved",n,void 0,e),r(e,e=>a("DOMNodeRemovedFromDocument",e,{bubbles:!1})),a("DOMNodeRemovedFromDocument",n,{bubbles:!1},e)}),e.addedNodes.forEach(e=>{t.push(n),a("DOMNodeInserted",e),r(e,e=>a("DOMNodeInsertedIntoDocument",e,{bubbles:!1}))}))}),t))a("DOMSubtreeModified",n)}function d(e){let t=e.getRootNode();for(;t instanceof ShadowRoot;)t=t.host.getRootNode();return t instanceof Document?t.documentElement:t}let s={subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0,characterData:!0,characterDataOldValue:!0},c=Element.prototype.addEventListener;function f(e,o,a){return t.has(e)?{fullEventName:e+n,augmentedListener(t){Object.defineProperty(t,"type",{writable:!1,value:e}),o(t)}}:{fullEventName:e,augmentedListener:o}}Element.prototype.addEventListener=function(e,n,o){if(t.has(e)){!function e(t){if(i.has(t))return;i.add(t);let n=d(t);if(l.has(n)){l.get(n).count++;return}let o=new MutationObserver(u);l.set(n,{observer:o,count:1}),o.observe(n,s)}(this);let{augmentedListener:a,fullEventName:r}=f(e,n,o);c.apply(this,[r,a,o]);return}c.call(this,e,n,o)};let v=window.removeEventListener;Element.prototype.removeEventListener=function(e,n,o){if(t.has(e)){!function e(t){if(!i.has(t))return;i.delete(t);let n=d(t);if(l.has(n)&&0==--l.get(n).count){let o=l.get(n).observer;l.delete(n),o.disconnect()}}(this);let{augmentedListener:a,fullEventName:r}=f(e,n,o);v.apply(this,[r,a,o]);return}v.call(this,e,n,o)},window.MutationEvent=class extends CustomEvent{constructor(e,t){if("MagicString"!==e)throw"Illegal constructor";super("",t)}initMutationEvent(...e){this.initCustomEvent(...e)}static MODIFICATION=1;static ADDITION=2;static REMOVAL=3},window.initMutationEvent=()=>new MutationEvent;let h=Document.prototype.createEvent;Document.prototype.createEvent=function(e,...t){return"MutationEvent"===e?new MutationEvent("MagicString"):h.call(this,e,...t)},console.log(`Mutation Events polyfill installed (native feature: ${e?"supported":"not present"}).`)}();
